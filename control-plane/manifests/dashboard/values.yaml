kubernetes-dashboard:
  protocolHttp: false
  annotations:
    konghq.com/plugins: add-auth-headers
    konghq.com/override: dashboard-kong-config
  app:  
    ingress:
      enabled: true
      issuer: 
        name: letsencrypt-staging
        scope: cluster
      tls:
        enabled: true
      hosts:
        - dashboard.tineochristopher.com
      path: /
      pathType: Prefix
      ingressClassName: nginx
      pathType: Prefix
      annotations:
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        nginx.ingress.kubernetes.io/ssl-redirect: "true"

        # External DNS
        external-dns.alpha.kubernetes.io/hostname: dashboard.tineochristopher.com
        external-dns.alpha.kubernetes.io/target: 96.248.109.98

        # Auth with oauth2-proxy
        nginx.ingress.kubernetes.io/auth-url: "https://auth.tineochristopher.com/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: "https://auth.tineochristopher.com/oauth2/start?rd=$escaped_request_uri"
        
        nginx.ingress.kubernetes.io/auth-response-headers: "X-Auth-Request-User,X-Auth-Request-Email,X-Auth-Request-Access-Token,X-Auth-Request-Groups,Authorization"
        nginx.ingress.kubernetes.io/configuration-snippet: |
          auth_request_set $access_token $upstream_http_x_auth_request_access_token;
          auth_request_set $user $upstream_http_x_auth_request_user;
          auth_request_set $email $upstream_http_x_auth_request_email;
          auth_request_set $groups $upstream_http_x_auth_request_groups;
        
          proxy_set_header Authorization "Bearer $access_token";
          proxy_set_header X-Remote-User $user;
          proxy_set_header X-Remote-Email $email;
          proxy_set_header X-Remote-Groups $groups;
          proxy_set_header X-Forwarded-User $user;
          proxy_set_header X-Forwarded-Email $email;
        
          proxy_set_header X-Kong-Upstream-Authorization "Bearer $access_token";
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
redis:
  architecture: standalone
  auth:
    enabled: true
    password: password
  master:
    persistence:
      enabled: true
      size: 1Gi

oauth2-proxy:
  nameOverride: oauth2-proxy
  ingress:
    enabled: true
    className: nginx
    path: /oauth2
    pathType: Prefix
    hosts:
    - auth.tineochristopher.com
    # tls:
    # - host: oauth2-proxy.tineochristopher.com
    #   secretName: oauth2-proxy-tls
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      
      external-dns.alpha.kubernetes.io/hostname: auth.tineochristopher.com
      external-dns.alpha.kubernetes.io/target: 96.248.109.98
  config:
    existingSecret: oauth2-proxy-config
    configFile: |
      provider = "oidc"
      oidc_issuer_url = "https://keycloak.tineochristopher.com/realms/kubernetes"
      whitelist_domains = [".tineochristopher.com"]
      email_domains = ["*"]
      redirect_url = "https://auth.tineochristopher.com/oauth2/callback"
      upstreams = [ "static://202" ]
      reverse_proxy = true

      # Authentication headers
      set_xauthrequest = true 
      pass_access_token = true 
      pass_authorization_header = true 
      pass_user_headers = true 
      set_authorization_header = true

      # Cookie settings
      cookie_domains = ".tineochristopher.com"
      cookie_secure = "true"
      cookie_name = "_oauth2_proxy"
      cookie_expire = "4h"
      cookie_refresh = "1h"

      # Redis session store
      session_store_type = "redis"
      redis_connection_url = "redis://dashboard-redis-master.kubernetes-dashboard.svc.cluster.local:6379"
      redis_password = "password"