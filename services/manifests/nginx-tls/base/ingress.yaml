apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx
  annotations:
    # Auth configuration
    nginx.ingress.kubernetes.io/auth-url: "https://auth.tineochristopher.com/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://auth.tineochristopher.com/oauth2/start?rd=$request_uri"
    nginx.ingress.kubernetes.io/auth-response-headers: "X-Auth-Request-Email,X-Auth-Request-Groups,X-Auth-Request-Preferred-Username,X-Auth-Request-User,X-Auth-Request-Access-Token"
    
    # Extract headers from auth response and set as variables
    nginx.ingress.kubernetes.io/auth-snippet: |
      auth_request_set $auth_email $upstream_http_x_auth_request_email;
      auth_request_set $auth_groups $upstream_http_x_auth_request_groups;
      auth_request_set $auth_username $upstream_http_x_auth_request_preferred_username;
      auth_request_set $auth_user $upstream_http_x_auth_request_user;
      auth_request_set $auth_token $upstream_http_x_auth_request_access_token;
    
    # Forward the variables as headers to your backend
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Auth-Request-Email $auth_email;
      proxy_set_header X-Auth-Request-Groups $auth_groups;
      proxy_set_header X-Auth-Request-Preferred-Username $auth_username;
      proxy_set_header X-Auth-Request-User $auth_user;
      proxy_set_header X-Auth-Request-Access-Token $auth_token;
    
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - web.tineochristopher.com
    secretName: web-tineochristopher-com-tls
  rules:
  - host: web.tineochristopher.com
    http:
      paths:
      - backend:
          service:
            name: nginx
            port:
              number: 80
        path: /
        pathType: Prefix
status:
  loadBalancer: {}
