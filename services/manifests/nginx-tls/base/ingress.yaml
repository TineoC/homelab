apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx
  annotations:
    # Auth configuration
    nginx.ingress.kubernetes.io/auth-url: "https://auth.tineochristopher.com/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://auth.tineochristopher.com/oauth2/start?rd=$scheme://$http_host$request_uri"
    nginx.ingress.kubernetes.io/auth-response-headers: "X-Auth-Request-User,X-Auth-Request-Email,X-Auth-Request-Access-Token,Authorization"
    
    # Alternative approach - combined snippet
    nginx.ingress.kubernetes.io/server-snippet: |
      auth_request_set $auth_user $upstream_http_x_auth_request_user;
      auth_request_set $auth_email $upstream_http_x_auth_request_email;
      auth_request_set $auth_token $upstream_http_x_auth_request_access_token;
    
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Auth-Request-User: $auth_user";
      more_set_headers "X-Auth-Request-Email: $auth_email";  
      more_set_headers "X-Auth-Request-Access-Token: $auth_token";
    
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - web.tineochristopher.com
    secretName: web-tineochristopher-com-tls
  rules:
  - host: web.tineochristopher.com
    http:
      paths:
      - backend:
          service:
            name: nginx
            port:
              number: 80
        path: /
        pathType: Prefix
status:
  loadBalancer: {}
